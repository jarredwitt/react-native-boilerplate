/*
*
*	{{properCase name}} - built using screen generator
*
*/

import React, { Component, PropTypes } from 'react';
import { Text, View } from 'react-native';
import { connect } from 'react-redux';
import { createSelector } from 'reselect';

{{#if wantActionsAndReducer}}
import {} from '~/actions/{{camelCase name}}';
import select{{properCase name}} from '~/selectors';
{{/if}}
{{#if wantStyle}}
import styles from './styles/index.style';
{{/if}}

export class {{properCase name}} extends Component {
  static propTypes = {

  };

  render() {
    return (
      {{#if wantStyle}}
      <View style={styles.main}>
        <Text>I am the {{properCase name}} screen.</Text>
      </View>
      {{else}}
      <View>
        <Text>I am the {{properCase name}} screen.</Text>
      </View>
      {{/if}}
    );
  }
}

const mapStateToProps = createSelector(
  select{{properCase name}}(),
  () => ({}),
);

function mapDispatchToProps(dispatch) {
  return {
    dispatch,
  };
}

export default connect(mapStateToProps, mapDispatchToProps)({{properCase name}});
